{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Note This is an unofficial wiki. If you want the official wiki just click here . Welcome to the EnderIO Wiki here on MkDocs! The Wiki \u00b6 This is an unofficial wiki. I just wanted to make my own version. Bugs \u00b6 If you wish to report a bug, please raise an issue in the issue tracker . Include as much information as you can, including the version of EnderIO and Minecraft. The more info the better, if I can't reproduce it, I probably can't fix it. Screenshots can/would be very helpful. Feature Requests \u00b6 If you wish to request a new feature please do the following: Go to the Suggestion Tracker and check if somebody hasn't already requested it. If you have done step 1 and it hasn't already been requested, raise a new suggestion. Otherwise vote for the existing one. Smile, you know you want to. Making me better \u00b6 Sorry, but this unofficial wiki is closed source as of now. Advanced \u00b6 Are you a server administrator, modpack maker or modder? Have a look at Non Gameplay Information . Enjoy, Pqtato","title":"Home"},{"location":"#the-wiki","text":"This is an unofficial wiki. I just wanted to make my own version.","title":"The Wiki"},{"location":"#bugs","text":"If you wish to report a bug, please raise an issue in the issue tracker . Include as much information as you can, including the version of EnderIO and Minecraft. The more info the better, if I can't reproduce it, I probably can't fix it. Screenshots can/would be very helpful.","title":"Bugs"},{"location":"#feature-requests","text":"If you wish to request a new feature please do the following: Go to the Suggestion Tracker and check if somebody hasn't already requested it. If you have done step 1 and it hasn't already been requested, raise a new suggestion. Otherwise vote for the existing one. Smile, you know you want to.","title":"Feature Requests"},{"location":"#making-me-better","text":"Sorry, but this unofficial wiki is closed source as of now.","title":"Making me better"},{"location":"#advanced","text":"Are you a server administrator, modpack maker or modder? Have a look at Non Gameplay Information . Enjoy, Pqtato","title":"Advanced"},{"location":"API-Capacitors/","text":"Third party mods can make new capacitors that Ender IO will use just like the built-in ones. There are two ways of doing so: Programmatic and NBT. The programmatic way allows you more control but gives you a compile-time dependency on Ender IO. The NBT way doesn't do either. Programmatic \u00b6 Implement crazypants.enderio.base.capacitor.ICapacitorDataItem on your item. It only has one method, getCapacitorData() . This will be called to retrieve the data object ( ICapacitorData ) from an ItemStack when it is inserted into a machine. The capacitor data will then be queried every time a value is needed (one notable exception is the machine's energy buffer size, which is only set once). ICapacitorData also is a quite simple interface, virtually everything happens in float getUnscaledValue(@Nonnull ICapacitorKey key) . The single parameter is a ICapacitorKey , one of the pre-defined keys in Ender IO that represent all the different values Ender IO's machines have. There's a CapacitorKey for the energy buffer size of the Sagmill, one for the stack size limit of the Farming Station, one for cost of copying a coordinate paper in the Dialing Device, etc. getUnscaledValue() then needs to produce a capacitor level for the CapacitorKey. This is not the final value, but the quality of the capacitor for this specific use. The 3 'normal' capacitors have the levels 1, 2 and 3 for all uses. The level getUnscaledValue() produces should stay between 0 and 5. Values outside this range could produce serious malfunctions. NBT \u00b6 NBT-base capacitors work the same way as programmatic ones, just that there is no getCapacitorData() on the item. Instead the ICapacitorData is created from the NBT tags of the ItemStack. This means that the NBT data has to contain a complete mapping of all possible CapacitorKeys to a capacitor level. To achieve that, the NBT data can contain level data in 4 different ways: LEVEL, TYPE, OWNER+TYPE, NAME. When looking up a value, Ender IO will try to find a value in reverse order. Note: The examples on this page are incomplete NBT snippets and need to be combined according to what's written in the descriptions. TL;DR: Copy&Paste without reading won't work. LEVEL \u00b6 1 {eiocap:{level:1.111f}} A LEVEL definition is required for all capacitors to be valid. This is the ultimate fallback value. DURABILITY \u00b6 If an item that has durability has a NBT capacitor applied to it, then it will damage the item for 1 point each time the machine it is in completes a task. TYPE \u00b6 1 2 3 4 5 6 7 8 {eiocap:{amount:2.222f}} {eiocap:{area:2.222f}} {eiocap:{energy_buffer:2.222f}} {eiocap:{energy_gen:2.222f}} {eiocap:{energy_intake:2.222f}} {eiocap:{energy_loss:2.222f}} {eiocap:{energy_use:2.222f}} {eiocap:{speed:2.222f}} Every CapacitorKey has a TYPE. The type is a rough categorization of the purpose of the key. OWNER+TYPE \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 {eiocap:{block_alloy_smelter:{energy_buffer:2.222f}}} {eiocap:{block_alloy_smelter:{energy_intake:2.222f}}} {eiocap:{block_alloy_smelter:{energy_use:2.222f}}} {eiocap:{block_attractor_obelisk:{area:2.222f}}} {eiocap:{block_attractor_obelisk:{energy_buffer:2.222f}}} {eiocap:{block_attractor_obelisk:{energy_intake:2.222f}}} {eiocap:{block_attractor_obelisk:{energy_use:2.222f}}} {eiocap:{block_aversion_obelisk:{area:2.222f}}} {eiocap:{block_aversion_obelisk:{energy_buffer:2.222f}}} {eiocap:{block_aversion_obelisk:{energy_intake:2.222f}}} {eiocap:{block_aversion_obelisk:{energy_use:2.222f}}} {eiocap:{block_buffer:{energy_buffer:2.222f}}} {eiocap:{block_buffer:{energy_intake:2.222f}}} {eiocap:{block_buffer:{energy_use:2.222f}}} {eiocap:{block_combustion_generator:{energy_buffer:2.222f}}} {eiocap:{block_combustion_generator:{energy_gen:2.222f}}} {eiocap:{block_combustion_generator:{energy_loss:2.222f}}} {eiocap:{block_dialing_device:{energy_buffer:2.222f}}} {eiocap:{block_dialing_device:{energy_intake:2.222f}}} {eiocap:{block_dialing_device:{energy_use:2.222f}}} {eiocap:{block_enhanced_combustion_generator:{energy_buffer:2.222f}}} {eiocap:{block_enhanced_combustion_generator:{energy_gen:2.222f}}} {eiocap:{block_enhanced_combustion_generator:{energy_loss:2.222f}}} {eiocap:{block_farm_station:{amount:2.222f}}} {eiocap:{block_farm_station:{area:2.222f}}} {eiocap:{block_farm_station:{energy_buffer:2.222f}}} {eiocap:{block_farm_station:{energy_intake:2.222f}}} {eiocap:{block_farm_station:{energy_use:2.222f}}} {eiocap:{block_painter:{energy_buffer:2.222f}}} {eiocap:{block_painter:{energy_intake:2.222f}}} {eiocap:{block_painter:{energy_use:2.222f}}} {eiocap:{block_powered_spawner:{energy_buffer:2.222f}}} {eiocap:{block_powered_spawner:{energy_intake:2.222f}}} {eiocap:{block_powered_spawner:{energy_use:2.222f}}} {eiocap:{block_powered_spawner:{speed:2.222f}}} {eiocap:{block_sag_mill:{energy_buffer:2.222f}}} {eiocap:{block_sag_mill:{energy_intake:2.222f}}} {eiocap:{block_sag_mill:{energy_use:2.222f}}} {eiocap:{block_simple_alloy_smelter:{energy_buffer:2.222f}}} {eiocap:{block_simple_alloy_smelter:{energy_intake:2.222f}}} {eiocap:{block_simple_alloy_smelter:{energy_use:2.222f}}} {eiocap:{block_simple_stirling_generator:{energy_buffer:2.222f}}} {eiocap:{block_simple_stirling_generator:{energy_gen:2.222f}}} {eiocap:{block_simple_stirling_generator:{energy_loss:2.222f}}} {eiocap:{block_slice_and_splice:{energy_buffer:2.222f}}} {eiocap:{block_slice_and_splice:{energy_intake:2.222f}}} {eiocap:{block_slice_and_splice:{energy_use:2.222f}}} {eiocap:{block_soul_binder:{amount:2.222f}}} {eiocap:{block_soul_binder:{energy_buffer:2.222f}}} {eiocap:{block_soul_binder:{energy_intake:2.222f}}} {eiocap:{block_soul_binder:{energy_use:2.222f}}} {eiocap:{block_stirling_generator:{energy_buffer:2.222f}}} {eiocap:{block_stirling_generator:{energy_gen:2.222f}}} {eiocap:{block_stirling_generator:{energy_loss:2.222f}}} {eiocap:{block_stirling_generator:{speed:2.222f}}} {eiocap:{block_transceiver:{energy_buffer:2.222f}}} {eiocap:{block_transceiver:{energy_intake:2.222f}}} {eiocap:{block_transceiver:{energy_use:2.222f}}} {eiocap:{block_vat:{energy_buffer:2.222f}}} {eiocap:{block_vat:{energy_intake:2.222f}}} {eiocap:{block_vat:{energy_use:2.222f}}} {eiocap:{block_weather_obelisk:{energy_buffer:2.222f}}} {eiocap:{block_weather_obelisk:{energy_intake:2.222f}}} {eiocap:{block_weather_obelisk:{energy_use:2.222f}}} {eiocap:{block_wired_charger:{energy_buffer:2.222f}}} {eiocap:{block_wired_charger:{energy_intake:2.222f}}} {eiocap:{block_wired_charger:{energy_use:2.222f}}} {eiocap:{block_wireless_charger:{energy_buffer:2.222f}}} {eiocap:{block_wireless_charger:{energy_intake:2.222f}}} {eiocap:{block_wireless_charger:{energy_use:2.222f}}} {eiocap:{block_zombie_generator:{energy_buffer:2.222f}}} {eiocap:{block_zombie_generator:{energy_gen:2.222f}}} {eiocap:{block_zombie_generator:{energy_loss:2.222f}}} In addition to a TYPE, capacitor keys are also specific to a machine. NAME \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 {eiocap:{alloy_smelter_power_buffer:2.222f}} {eiocap:{alloy_smelter_power_intake:2.222f}} {eiocap:{alloy_smelter_power_use:2.222f}} {eiocap:{attractor_power_buffer:2.222f}} {eiocap:{attractor_power_intake:2.222f}} {eiocap:{attractor_power_use:2.222f}} {eiocap:{attractor_range:2.222f}} {eiocap:{aversion_power_buffer:2.222f}} {eiocap:{aversion_power_intake:2.222f}} {eiocap:{aversion_power_use:2.222f}} {eiocap:{aversion_range:2.222f}} {eiocap:{buffer_power_buffer:2.222f}} {eiocap:{buffer_power_intake:2.222f}} {eiocap:{buffer_power_use:2.222f}} {eiocap:{combustion_power_buffer:2.222f}} {eiocap:{combustion_power_gen:2.222f}} {eiocap:{combustion_power_loss:2.222f}} {eiocap:{creative_buffer_power_buffer:2.222f}} {eiocap:{creative_buffer_power_intake:2.222f}} {eiocap:{creative_buffer_power_use:2.222f}} {eiocap:{dialing_device_power_buffer:2.222f}} {eiocap:{dialing_device_power_intake:2.222f}} {eiocap:{dialing_device_power_use:2.222f}} {eiocap:{dialing_device_power_use_paper:2.222f}} {eiocap:{dialing_device_power_use_teleport:2.222f}} {eiocap:{enhanced_combustion_power_buffer:2.222f}} {eiocap:{enhanced_combustion_power_gen:2.222f}} {eiocap:{enhanced_combustion_power_loss:2.222f}} {eiocap:{farm_base_size:2.222f}} {eiocap:{farm_bonus_size:2.222f}} {eiocap:{farm_power_buffer:2.222f}} {eiocap:{farm_power_intake:2.222f}} {eiocap:{farm_power_use:2.222f}} {eiocap:{farm_stack_limit:2.222f}} {eiocap:{inhibitor_power_buffer:2.222f}} {eiocap:{inhibitor_power_intake:2.222f}} {eiocap:{inhibitor_power_use:2.222f}} {eiocap:{inhibitor_range:2.222f}} {eiocap:{painter_power_buffer:2.222f}} {eiocap:{painter_power_intake:2.222f}} {eiocap:{painter_power_use:2.222f}} {eiocap:{relocator_power_buffer:2.222f}} {eiocap:{relocator_power_intake:2.222f}} {eiocap:{relocator_power_use:2.222f}} {eiocap:{relocator_range:2.222f}} {eiocap:{sag_mill_power_buffer:2.222f}} {eiocap:{sag_mill_power_intake:2.222f}} {eiocap:{sag_mill_power_use:2.222f}} {eiocap:{simple_alloy_smelter_power_buffer:2.222f}} {eiocap:{simple_alloy_smelter_power_intake:2.222f}} {eiocap:{simple_alloy_smelter_power_use:2.222f}} {eiocap:{simple_sag_mill_power_buffer:2.222f}} {eiocap:{simple_sag_mill_power_intake:2.222f}} {eiocap:{simple_sag_mill_power_use:2.222f}} {eiocap:{simple_stirling_power_buffer:2.222f}} {eiocap:{simple_stirling_power_gen:2.222f}} {eiocap:{simple_stirling_power_loss:2.222f}} {eiocap:{slice_power_buffer:2.222f}} {eiocap:{slice_power_intake:2.222f}} {eiocap:{slice_power_use:2.222f}} {eiocap:{soul_binder_power_buffer:2.222f}} {eiocap:{soul_binder_power_intake:2.222f}} {eiocap:{soul_binder_power_use:2.222f}} {eiocap:{soul_binder_sound_pitch:2.222f}} {eiocap:{spawner_power_buffer:2.222f}} {eiocap:{spawner_power_intake:2.222f}} {eiocap:{spawner_power_use:2.222f}} {eiocap:{spawner_speedup:2.222f}} {eiocap:{stirling_power_buffer:2.222f}} {eiocap:{stirling_power_gen:2.222f}} {eiocap:{stirling_power_loss:2.222f}} {eiocap:{stirling_power_time:2.222f}} {eiocap:{transceiver_power_buffer:2.222f}} {eiocap:{transceiver_power_intake:2.222f}} {eiocap:{transceiver_power_use:2.222f}} {eiocap:{vat_power_buffer:2.222f}} {eiocap:{vat_power_intake:2.222f}} {eiocap:{vat_power_use:2.222f}} {eiocap:{weather_power_buffer:2.222f}} {eiocap:{weather_power_fluid_use:2.222f}} {eiocap:{weather_power_intake:2.222f}} {eiocap:{weather_power_use:2.222f}} {eiocap:{wired_power_buffer:2.222f}} {eiocap:{wired_power_intake:2.222f}} {eiocap:{wired_power_output:2.222f}} {eiocap:{wireless_power_buffer:2.222f}} {eiocap:{wireless_power_intake:2.222f}} {eiocap:{wireless_power_output:2.222f}} {eiocap:{zombie_power_buffer:2.222f}} {eiocap:{zombie_power_gen:2.222f}} {eiocap:{zombie_power_loss:2.222f}} And the most specific way is to target a specific CapacitorKey by its name. Note: This list only contains keys for enderio-machines. Please note that these are the old names, the new ones you can look up yourself in the xml recipe files (e.g. capacitor_machines.xml).","title":"API Capacitors"},{"location":"API-Capacitors/#programmatic","text":"Implement crazypants.enderio.base.capacitor.ICapacitorDataItem on your item. It only has one method, getCapacitorData() . This will be called to retrieve the data object ( ICapacitorData ) from an ItemStack when it is inserted into a machine. The capacitor data will then be queried every time a value is needed (one notable exception is the machine's energy buffer size, which is only set once). ICapacitorData also is a quite simple interface, virtually everything happens in float getUnscaledValue(@Nonnull ICapacitorKey key) . The single parameter is a ICapacitorKey , one of the pre-defined keys in Ender IO that represent all the different values Ender IO's machines have. There's a CapacitorKey for the energy buffer size of the Sagmill, one for the stack size limit of the Farming Station, one for cost of copying a coordinate paper in the Dialing Device, etc. getUnscaledValue() then needs to produce a capacitor level for the CapacitorKey. This is not the final value, but the quality of the capacitor for this specific use. The 3 'normal' capacitors have the levels 1, 2 and 3 for all uses. The level getUnscaledValue() produces should stay between 0 and 5. Values outside this range could produce serious malfunctions.","title":"Programmatic"},{"location":"API-Capacitors/#nbt","text":"NBT-base capacitors work the same way as programmatic ones, just that there is no getCapacitorData() on the item. Instead the ICapacitorData is created from the NBT tags of the ItemStack. This means that the NBT data has to contain a complete mapping of all possible CapacitorKeys to a capacitor level. To achieve that, the NBT data can contain level data in 4 different ways: LEVEL, TYPE, OWNER+TYPE, NAME. When looking up a value, Ender IO will try to find a value in reverse order. Note: The examples on this page are incomplete NBT snippets and need to be combined according to what's written in the descriptions. TL;DR: Copy&Paste without reading won't work.","title":"NBT"},{"location":"API-Capacitors/#level","text":"1 {eiocap:{level:1.111f}} A LEVEL definition is required for all capacitors to be valid. This is the ultimate fallback value.","title":"LEVEL"},{"location":"API-Capacitors/#durability","text":"If an item that has durability has a NBT capacitor applied to it, then it will damage the item for 1 point each time the machine it is in completes a task.","title":"DURABILITY"},{"location":"API-Capacitors/#type","text":"1 2 3 4 5 6 7 8 {eiocap:{amount:2.222f}} {eiocap:{area:2.222f}} {eiocap:{energy_buffer:2.222f}} {eiocap:{energy_gen:2.222f}} {eiocap:{energy_intake:2.222f}} {eiocap:{energy_loss:2.222f}} {eiocap:{energy_use:2.222f}} {eiocap:{speed:2.222f}} Every CapacitorKey has a TYPE. The type is a rough categorization of the purpose of the key.","title":"TYPE"},{"location":"API-Capacitors/#ownertype","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 {eiocap:{block_alloy_smelter:{energy_buffer:2.222f}}} {eiocap:{block_alloy_smelter:{energy_intake:2.222f}}} {eiocap:{block_alloy_smelter:{energy_use:2.222f}}} {eiocap:{block_attractor_obelisk:{area:2.222f}}} {eiocap:{block_attractor_obelisk:{energy_buffer:2.222f}}} {eiocap:{block_attractor_obelisk:{energy_intake:2.222f}}} {eiocap:{block_attractor_obelisk:{energy_use:2.222f}}} {eiocap:{block_aversion_obelisk:{area:2.222f}}} {eiocap:{block_aversion_obelisk:{energy_buffer:2.222f}}} {eiocap:{block_aversion_obelisk:{energy_intake:2.222f}}} {eiocap:{block_aversion_obelisk:{energy_use:2.222f}}} {eiocap:{block_buffer:{energy_buffer:2.222f}}} {eiocap:{block_buffer:{energy_intake:2.222f}}} {eiocap:{block_buffer:{energy_use:2.222f}}} {eiocap:{block_combustion_generator:{energy_buffer:2.222f}}} {eiocap:{block_combustion_generator:{energy_gen:2.222f}}} {eiocap:{block_combustion_generator:{energy_loss:2.222f}}} {eiocap:{block_dialing_device:{energy_buffer:2.222f}}} {eiocap:{block_dialing_device:{energy_intake:2.222f}}} {eiocap:{block_dialing_device:{energy_use:2.222f}}} {eiocap:{block_enhanced_combustion_generator:{energy_buffer:2.222f}}} {eiocap:{block_enhanced_combustion_generator:{energy_gen:2.222f}}} {eiocap:{block_enhanced_combustion_generator:{energy_loss:2.222f}}} {eiocap:{block_farm_station:{amount:2.222f}}} {eiocap:{block_farm_station:{area:2.222f}}} {eiocap:{block_farm_station:{energy_buffer:2.222f}}} {eiocap:{block_farm_station:{energy_intake:2.222f}}} {eiocap:{block_farm_station:{energy_use:2.222f}}} {eiocap:{block_painter:{energy_buffer:2.222f}}} {eiocap:{block_painter:{energy_intake:2.222f}}} {eiocap:{block_painter:{energy_use:2.222f}}} {eiocap:{block_powered_spawner:{energy_buffer:2.222f}}} {eiocap:{block_powered_spawner:{energy_intake:2.222f}}} {eiocap:{block_powered_spawner:{energy_use:2.222f}}} {eiocap:{block_powered_spawner:{speed:2.222f}}} {eiocap:{block_sag_mill:{energy_buffer:2.222f}}} {eiocap:{block_sag_mill:{energy_intake:2.222f}}} {eiocap:{block_sag_mill:{energy_use:2.222f}}} {eiocap:{block_simple_alloy_smelter:{energy_buffer:2.222f}}} {eiocap:{block_simple_alloy_smelter:{energy_intake:2.222f}}} {eiocap:{block_simple_alloy_smelter:{energy_use:2.222f}}} {eiocap:{block_simple_stirling_generator:{energy_buffer:2.222f}}} {eiocap:{block_simple_stirling_generator:{energy_gen:2.222f}}} {eiocap:{block_simple_stirling_generator:{energy_loss:2.222f}}} {eiocap:{block_slice_and_splice:{energy_buffer:2.222f}}} {eiocap:{block_slice_and_splice:{energy_intake:2.222f}}} {eiocap:{block_slice_and_splice:{energy_use:2.222f}}} {eiocap:{block_soul_binder:{amount:2.222f}}} {eiocap:{block_soul_binder:{energy_buffer:2.222f}}} {eiocap:{block_soul_binder:{energy_intake:2.222f}}} {eiocap:{block_soul_binder:{energy_use:2.222f}}} {eiocap:{block_stirling_generator:{energy_buffer:2.222f}}} {eiocap:{block_stirling_generator:{energy_gen:2.222f}}} {eiocap:{block_stirling_generator:{energy_loss:2.222f}}} {eiocap:{block_stirling_generator:{speed:2.222f}}} {eiocap:{block_transceiver:{energy_buffer:2.222f}}} {eiocap:{block_transceiver:{energy_intake:2.222f}}} {eiocap:{block_transceiver:{energy_use:2.222f}}} {eiocap:{block_vat:{energy_buffer:2.222f}}} {eiocap:{block_vat:{energy_intake:2.222f}}} {eiocap:{block_vat:{energy_use:2.222f}}} {eiocap:{block_weather_obelisk:{energy_buffer:2.222f}}} {eiocap:{block_weather_obelisk:{energy_intake:2.222f}}} {eiocap:{block_weather_obelisk:{energy_use:2.222f}}} {eiocap:{block_wired_charger:{energy_buffer:2.222f}}} {eiocap:{block_wired_charger:{energy_intake:2.222f}}} {eiocap:{block_wired_charger:{energy_use:2.222f}}} {eiocap:{block_wireless_charger:{energy_buffer:2.222f}}} {eiocap:{block_wireless_charger:{energy_intake:2.222f}}} {eiocap:{block_wireless_charger:{energy_use:2.222f}}} {eiocap:{block_zombie_generator:{energy_buffer:2.222f}}} {eiocap:{block_zombie_generator:{energy_gen:2.222f}}} {eiocap:{block_zombie_generator:{energy_loss:2.222f}}} In addition to a TYPE, capacitor keys are also specific to a machine.","title":"OWNER+TYPE"},{"location":"API-Capacitors/#name","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 {eiocap:{alloy_smelter_power_buffer:2.222f}} {eiocap:{alloy_smelter_power_intake:2.222f}} {eiocap:{alloy_smelter_power_use:2.222f}} {eiocap:{attractor_power_buffer:2.222f}} {eiocap:{attractor_power_intake:2.222f}} {eiocap:{attractor_power_use:2.222f}} {eiocap:{attractor_range:2.222f}} {eiocap:{aversion_power_buffer:2.222f}} {eiocap:{aversion_power_intake:2.222f}} {eiocap:{aversion_power_use:2.222f}} {eiocap:{aversion_range:2.222f}} {eiocap:{buffer_power_buffer:2.222f}} {eiocap:{buffer_power_intake:2.222f}} {eiocap:{buffer_power_use:2.222f}} {eiocap:{combustion_power_buffer:2.222f}} {eiocap:{combustion_power_gen:2.222f}} {eiocap:{combustion_power_loss:2.222f}} {eiocap:{creative_buffer_power_buffer:2.222f}} {eiocap:{creative_buffer_power_intake:2.222f}} {eiocap:{creative_buffer_power_use:2.222f}} {eiocap:{dialing_device_power_buffer:2.222f}} {eiocap:{dialing_device_power_intake:2.222f}} {eiocap:{dialing_device_power_use:2.222f}} {eiocap:{dialing_device_power_use_paper:2.222f}} {eiocap:{dialing_device_power_use_teleport:2.222f}} {eiocap:{enhanced_combustion_power_buffer:2.222f}} {eiocap:{enhanced_combustion_power_gen:2.222f}} {eiocap:{enhanced_combustion_power_loss:2.222f}} {eiocap:{farm_base_size:2.222f}} {eiocap:{farm_bonus_size:2.222f}} {eiocap:{farm_power_buffer:2.222f}} {eiocap:{farm_power_intake:2.222f}} {eiocap:{farm_power_use:2.222f}} {eiocap:{farm_stack_limit:2.222f}} {eiocap:{inhibitor_power_buffer:2.222f}} {eiocap:{inhibitor_power_intake:2.222f}} {eiocap:{inhibitor_power_use:2.222f}} {eiocap:{inhibitor_range:2.222f}} {eiocap:{painter_power_buffer:2.222f}} {eiocap:{painter_power_intake:2.222f}} {eiocap:{painter_power_use:2.222f}} {eiocap:{relocator_power_buffer:2.222f}} {eiocap:{relocator_power_intake:2.222f}} {eiocap:{relocator_power_use:2.222f}} {eiocap:{relocator_range:2.222f}} {eiocap:{sag_mill_power_buffer:2.222f}} {eiocap:{sag_mill_power_intake:2.222f}} {eiocap:{sag_mill_power_use:2.222f}} {eiocap:{simple_alloy_smelter_power_buffer:2.222f}} {eiocap:{simple_alloy_smelter_power_intake:2.222f}} {eiocap:{simple_alloy_smelter_power_use:2.222f}} {eiocap:{simple_sag_mill_power_buffer:2.222f}} {eiocap:{simple_sag_mill_power_intake:2.222f}} {eiocap:{simple_sag_mill_power_use:2.222f}} {eiocap:{simple_stirling_power_buffer:2.222f}} {eiocap:{simple_stirling_power_gen:2.222f}} {eiocap:{simple_stirling_power_loss:2.222f}} {eiocap:{slice_power_buffer:2.222f}} {eiocap:{slice_power_intake:2.222f}} {eiocap:{slice_power_use:2.222f}} {eiocap:{soul_binder_power_buffer:2.222f}} {eiocap:{soul_binder_power_intake:2.222f}} {eiocap:{soul_binder_power_use:2.222f}} {eiocap:{soul_binder_sound_pitch:2.222f}} {eiocap:{spawner_power_buffer:2.222f}} {eiocap:{spawner_power_intake:2.222f}} {eiocap:{spawner_power_use:2.222f}} {eiocap:{spawner_speedup:2.222f}} {eiocap:{stirling_power_buffer:2.222f}} {eiocap:{stirling_power_gen:2.222f}} {eiocap:{stirling_power_loss:2.222f}} {eiocap:{stirling_power_time:2.222f}} {eiocap:{transceiver_power_buffer:2.222f}} {eiocap:{transceiver_power_intake:2.222f}} {eiocap:{transceiver_power_use:2.222f}} {eiocap:{vat_power_buffer:2.222f}} {eiocap:{vat_power_intake:2.222f}} {eiocap:{vat_power_use:2.222f}} {eiocap:{weather_power_buffer:2.222f}} {eiocap:{weather_power_fluid_use:2.222f}} {eiocap:{weather_power_intake:2.222f}} {eiocap:{weather_power_use:2.222f}} {eiocap:{wired_power_buffer:2.222f}} {eiocap:{wired_power_intake:2.222f}} {eiocap:{wired_power_output:2.222f}} {eiocap:{wireless_power_buffer:2.222f}} {eiocap:{wireless_power_intake:2.222f}} {eiocap:{wireless_power_output:2.222f}} {eiocap:{zombie_power_buffer:2.222f}} {eiocap:{zombie_power_gen:2.222f}} {eiocap:{zombie_power_loss:2.222f}} And the most specific way is to target a specific CapacitorKey by its name. Note: This list only contains keys for enderio-machines. Please note that these are the old names, the new ones you can look up yourself in the xml recipe files (e.g. capacitor_machines.xml).","title":"NAME"},{"location":"Advanced-Item-Filter/","text":"","title":"Advanced Item Filter"},{"location":"Alloy-Smelter/","text":"Used to create EnderIO alloys . Can also be used as a powered furnace capable of processing up to three items at a time. There is a button in the GUI to limit the machine to one of those operation types. Upgrade with capacitors to increase speed and energy storage. Speed is directly related to \u00b5I/t. Capacitor \u00b5I/t Buffer (\u00b5I) Basic 20 100,000 Double-Layer 60 300,000 Octadic 100 500,000 Good Loot Cap (4) 160 800,000 Theoretical Max (5) 260 1,300,000","title":"Alloy Smelter"},{"location":"Alloys/","text":"All alloys listed here can be used to craft grinding balls to enhance the sag mill. Conductive Iron \u00b6 An alloy of redstone and iron. It is created in an alloy smelter for 10,000 \u00b5I and is used as a crafting component for basic energy conduits, grinding balls, and the electromagnet. Energetic Alloy \u00b6 An alloy of gold, redstone and glowstone dust. It is created in an alloy smelter for 10,000 \u00b5I and is used as a crafting component for advanced energy conduits, grinding balls and a number of advanced machines. Vibrant Alloy \u00b6 An alloy of Energetic alloy and ender pearl. It is created in an alloy smelter for 10,000 \u00b5I and is used as a crafting component for ender energy conduits, and a number of advanced machines. Pulsating Iron \u00b6 An alloy of iron and ender pearl. It is created in an alloy smelter for 10,000 \u00b5I and is used as a crafting component for item conduits, advanced photovoltaic cells and pulsating crystals. Electrical Steel \u00b6 An alloy of iron, coal powder and silicon. It is created in an alloy smelter for 10,000 \u00b5I and is used as a crafting component for a lot of mid tier and advanced machines. Dark Steel \u00b6 An alloy of iron, coal powder and obsidian. It is created in an alloy smelter for 20,000 \u00b5I and is used as a crafting component for dark steel tools and equipment and a number of advanced machines. Solarium \u00b6 An alloy of gold and soul sand. it is created in an alloy smelter for 10,000 \u00b5I and is used as a crafting component for soul vials and a number of souled machines. Redstone Alloy \u00b6 An alloy of redstone and silicon. It is created in an alloy smelter for 10,000 \u00b5I and is used as a crafting component for redstone conduits and redstone filters.","title":"Alloys"},{"location":"Alloys/#conductive-iron","text":"An alloy of redstone and iron. It is created in an alloy smelter for 10,000 \u00b5I and is used as a crafting component for basic energy conduits, grinding balls, and the electromagnet.","title":"Conductive Iron"},{"location":"Alloys/#energetic-alloy","text":"An alloy of gold, redstone and glowstone dust. It is created in an alloy smelter for 10,000 \u00b5I and is used as a crafting component for advanced energy conduits, grinding balls and a number of advanced machines.","title":"Energetic Alloy"},{"location":"Alloys/#vibrant-alloy","text":"An alloy of Energetic alloy and ender pearl. It is created in an alloy smelter for 10,000 \u00b5I and is used as a crafting component for ender energy conduits, and a number of advanced machines.","title":"Vibrant Alloy"},{"location":"Alloys/#pulsating-iron","text":"An alloy of iron and ender pearl. It is created in an alloy smelter for 10,000 \u00b5I and is used as a crafting component for item conduits, advanced photovoltaic cells and pulsating crystals.","title":"Pulsating Iron"},{"location":"Alloys/#electrical-steel","text":"An alloy of iron, coal powder and silicon. It is created in an alloy smelter for 10,000 \u00b5I and is used as a crafting component for a lot of mid tier and advanced machines.","title":"Electrical Steel"},{"location":"Alloys/#dark-steel","text":"An alloy of iron, coal powder and obsidian. It is created in an alloy smelter for 20,000 \u00b5I and is used as a crafting component for dark steel tools and equipment and a number of advanced machines.","title":"Dark Steel"},{"location":"Alloys/#solarium","text":"An alloy of gold and soul sand. it is created in an alloy smelter for 10,000 \u00b5I and is used as a crafting component for soul vials and a number of souled machines.","title":"Solarium"},{"location":"Alloys/#redstone-alloy","text":"An alloy of redstone and silicon. It is created in an alloy smelter for 10,000 \u00b5I and is used as a crafting component for redstone conduits and redstone filters.","title":"Redstone Alloy"},{"location":"Attractor-Obelisk/","text":"Entices mobs to walk towards it Specify the mobs to effect by placing their souls (in soul vials) within the device. Can be upgraded with capacitors to increase its range.","title":"Attractor Obelisk"},{"location":"Aversion-Obelisk/","text":"Prevents mobs from naturally spawning within its area of effect Specify the mobs to effect by placing their souls (in soul vials) within the device. Can be upgraded with capacitors to increase its range.","title":"Aversion Obelisk"},{"location":"Basic-Gear/","text":"Crafting Component The basic gear is used to craft machines.","title":"Basic Gear"},{"location":"Basic-Item-Filter/","text":"","title":"Basic Item Filter"},{"location":"Binder-Composite/","text":"Crafting Component Binder Composite is made from sand, clay and gravel. It smelts into Conduit Binder .","title":"Binder Composite"},{"location":"Broken-Spawner/","text":"Drops when breaking a mob spawner When combined with a Powered Spawner in an Anvil you'll get a Powered Spawner that can spawn the mob type of this broken spawner. You can change the type of a broken spawner with a Soul Vial in the Soul Binder .","title":"Broken Spawner"},{"location":"Buffers/","text":"Item Buffer \u00b6 A block with a 9 stack inventory that can push/pull like a hopper in any direction. Power Buffer \u00b6 A block that holds and transfers power. Can be configured to increase or decrease the amount transferred using the GUI. Improving the Capacitor will improve it's buffer size and maximum transfer rate. Omni-Buffer \u00b6 A block that combines the functions of the power buffer and item buffer into a single block. Creative Buffer \u00b6 A creative version of the omni-buffer.","title":"Buffers"},{"location":"Buffers/#item-buffer","text":"A block with a 9 stack inventory that can push/pull like a hopper in any direction.","title":"Item Buffer"},{"location":"Buffers/#power-buffer","text":"A block that holds and transfers power. Can be configured to increase or decrease the amount transferred using the GUI. Improving the Capacitor will improve it's buffer size and maximum transfer rate.","title":"Power Buffer"},{"location":"Buffers/#omni-buffer","text":"A block that combines the functions of the power buffer and item buffer into a single block.","title":"Omni-Buffer"},{"location":"Buffers/#creative-buffer","text":"A creative version of the omni-buffer.","title":"Creative Buffer"},{"location":"Capacitor-Banks/","text":"Capacitor Banks store power. Capacitor Banks of the same tier can connect into a free-form multiblock. Each capacitor increases the total storage capacity, and the maximum transfer rate. The Capacitor Bank GUI has four slots to charge RF items, can set the Max Input and Max Output, can react to a redstone signal to enable/disable energy input and output separately, and allows quick access to the Armor, off-hand, and Baubles slots. By mousing over the power bar you can see precise statistics relating to current power, maximum power, and current net power gain or loss. Each side of a Capacitor Bank can be changed by shift + right clicking it with an empty hand, or by right clicking with a Yeta Wrench . This can be used to show a power bar or screen with power input/output outside of the GUI. Basic Capacitor Bank \u00b6 Stores 1,000,000 RF and can transfer 1,000 RF/t. Capacitor Bank \u00b6 Stores 5,000,000 RF and can transfer 5,000 RF/t. Vibrant Capacitor Bank \u00b6 Stores 25,000,000 RF and can transfer 25,000 RF/t. Creative Capacitor Bank \u00b6 Normally not craftable. Cannot form a multiblock. Is permanently set to contain 2,500,000 RF out of 5,000,000 and is capable of transferring 500,000 RF. Energy can either be inserted (voided) or extracted (infinite supply).","title":"Capacitor Banks"},{"location":"Capacitor-Banks/#basic-capacitor-bank","text":"Stores 1,000,000 RF and can transfer 1,000 RF/t.","title":"Basic Capacitor Bank"},{"location":"Capacitor-Banks/#capacitor-bank","text":"Stores 5,000,000 RF and can transfer 5,000 RF/t.","title":"Capacitor Bank"},{"location":"Capacitor-Banks/#vibrant-capacitor-bank","text":"Stores 25,000,000 RF and can transfer 25,000 RF/t.","title":"Vibrant Capacitor Bank"},{"location":"Capacitor-Banks/#creative-capacitor-bank","text":"Normally not craftable. Cannot form a multiblock. Is permanently set to contain 2,500,000 RF out of 5,000,000 and is capable of transferring 500,000 RF. Energy can either be inserted (voided) or extracted (infinite supply).","title":"Creative Capacitor Bank"},{"location":"Capacitors/","text":"Crafting Component / Machine Upgrade Basic capacitors are used to craft machines that use energy to operate. Double-layer and octadic capacitors act as machine upgrades for machines that have an upgrade slot. They increase energy storage and speed or range of machines. Special capacitors with wildly varying properties can be found in loot chests.","title":"Capacitors"},{"location":"Chargeable-Item-Filter/","text":"Upgrade for item conduits Filters chargeable items based on how much Energy they have stored.","title":"Chargeable Item Filter"},{"location":"Chassis-Parts/","text":"Crafting component used to create block detectors and decorative blocks.","title":"Chassis Parts"},{"location":"Clear-Glass-and-Fused-Quartz/","text":"Clear Glass \u00b6 A glass alternative that connects to adjascent clear glass to form an almost textureless see through block option. Enlightened variety also glows with a brightness of glowstone. Dark variety blocks light from passing through. Fused Quartz \u00b6 Similar to Clear glass. Also somewhat blast resistant. Also comes in enlightened and dark varieties.","title":"Clear Glass and Fused Quartz"},{"location":"Clear-Glass-and-Fused-Quartz/#clear-glass","text":"A glass alternative that connects to adjascent clear glass to form an almost textureless see through block option. Enlightened variety also glows with a brightness of glowstone. Dark variety blocks light from passing through.","title":"Clear Glass"},{"location":"Clear-Glass-and-Fused-Quartz/#fused-quartz","text":"Similar to Clear glass. Also somewhat blast resistant. Also comes in enlightened and dark varieties.","title":"Fused Quartz"},{"location":"Coal-Powder/","text":"Crafting Component Created by sagmilling coal. Used to craft double-layer capacitors , Electrical Steel and Dark Steel .","title":"Coal Powder"},{"location":"Cold-Fire-Igniter/","text":"Allows to place Cold Fire Cold Fire will not spread to other blocks, will not burn items or entities, and will not cause Rocket Fuel to explode. Other mods may or may not recognize it as fire. The igniter needs to be fueled with Vapor of Levity .","title":"Cold Fire Igniter"},{"location":"Combustion-Generator/","text":"Generates RF from liquid fuels. Requires a fuel and a coolant. The only available coolant in Ender IO is Water. Fuel RF/t Fuel t/mB Water t/mB Hootch 60 6 32 Fire Water 80 15 24 Rocket Fuel 160 7 12","title":"Combustion Generator"},{"location":"Conduit-Binder/","text":"Crafting Component Conduit Binder is smelted from Binder Composite . It is used to craft Conduits , Facades , Remote Awareness Upgrades , Travel Anchors and \"Travel Anchor\" Decoration Blocks .","title":"Conduit Binder"},{"location":"Conduit-Facades/","text":"Conduit Facade \u00b6 Facades, once painted in a painting machine look like the block they were painted with, but can have conduits placed within them, allowing you to hide your conduits. Regular facades do not hide conduits when the block it is painted with is smaller then the conduit bundle. In this case a transparent conduit facade must be used instead. Hardened Conduit Facade \u00b6 Similar to conduit facades, these are also somewhat blast resistant.","title":"Conduit Facades"},{"location":"Conduit-Facades/#conduit-facade","text":"Facades, once painted in a painting machine look like the block they were painted with, but can have conduits placed within them, allowing you to hide your conduits. Regular facades do not hide conduits when the block it is painted with is smaller then the conduit bundle. In this case a transparent conduit facade must be used instead.","title":"Conduit Facade"},{"location":"Conduit-Facades/#hardened-conduit-facade","text":"Similar to conduit facades, these are also somewhat blast resistant.","title":"Hardened Conduit Facade"},{"location":"Conduit-Probe/","text":"Conduit Probe The Conduit Probe has 2 modes: In probe mode you can right-click a Conduit to display details about its network. In copy/paste mode you can shift-right-click to copy a conduit connection's settings and right-click to paste them. Use Shift-Mouse Wheel or 'Y' to change mode. The Conduit Probe is also used to craft Chargeable Item Filters , Power Monitors and RF Gauges .","title":"Conduit Probe"},{"location":"Contributing-to-the-Wiki/","text":"Sorry, but this unofficial wiki is closed source as of now.","title":"Contributing to the Wiki"},{"location":"Crafter/","text":"","title":"Crafter"},{"location":"Crystals/","text":"Crystals \u00b6","title":"Crystals"},{"location":"Crystals/#crystals","text":"","title":"Crystals"},{"location":"Dark-Axe/","text":"","title":"Dark Axe"},{"location":"Dark-Boots/","text":"","title":"Dark Boots"},{"location":"Dark-Bow/","text":"","title":"Dark Bow"},{"location":"Dark-Helm/","text":"","title":"Dark Helm"},{"location":"Dark-Iron-Bars/","text":"","title":"Dark Iron Bars"},{"location":"Dark-Leggings/","text":"","title":"Dark Leggings"},{"location":"Dark-Pick/","text":"","title":"Dark Pick"},{"location":"Dark-Plate/","text":"","title":"Dark Plate"},{"location":"Dark-Shears/","text":"","title":"Dark Shears"},{"location":"Dark-Steel-Anvil/","text":"","title":"Dark Steel Anvil"},{"location":"Dark-Steel-Ball/","text":"","title":"Dark Steel Ball"},{"location":"Dark-Steel-Ladder/","text":"","title":"Dark Steel Ladder"},{"location":"Dark-Steel-Trapdoor/","text":"","title":"Dark Steel Trapdoor"},{"location":"Decoration-Blocks/","text":"","title":"Decoration Blocks"},{"location":"Dimensional-Transceiver/","text":"","title":"Dimensional Transceiver"},{"location":"Electromagnet/","text":"","title":"Electromagnet"},{"location":"Enchanter/","text":"","title":"Enchanter"},{"location":"Ender-Resonator/","text":"","title":"Ender Resonator"},{"location":"Enderios/","text":"Part of a balanced breakfast! Not actually healthy. Contains 253g of sugar, 53g of fat, and 394g of ender dust. Side effects of ender dust include: nausea, dizziness, confusion, and random teleporting.","title":"Enderios"},{"location":"Enderman-Head/","text":"","title":"Enderman Head"},{"location":"Energy-(\u00b5I)/","text":"Ender IO's unit of Energy is called a Micro Infinity, and is annotated by \u00b5I. In practice, Ender IO uses the Forge Energy (FE) API; Micro Infinity is another label for it, similar to Actually Addition's Crystal Flux and Immersive Engineering's Immersive Flux. In general, Forge Energy converts 1:1 with both the CoFH RF and Tesla APIs, but the power conversion has to be done using another mod. Note that the CoFH mods (the Thermal series) handle the RF <-> FE themselves and encourages other RF mods to do so as well.","title":"Energy (\u00b5I)"},{"location":"Energy-Conduits/","text":"","title":"Energy Conduits"},{"location":"Existing-Item-Filter/","text":"","title":"Existing Item Filter"},{"location":"Exit-Rail/","text":"A rail that will break minecarts that are either empty or carrying a player or mob. Other minecart variants are slowed down.","title":"Exit Rail"},{"location":"Experience-Obelisk/","text":"","title":"Experience Obelisk"},{"location":"Experience-Rod/","text":"","title":"Experience Rod"},{"location":"Farming-Station/","text":"","title":"Farming Station"},{"location":"Filters/","text":"Filters can be added to conduit connections to control what the conduit can insert or extract. They can be configured when installed (gear button) or by right-clicking them into the air. Item Filters \u00b6 Basic Item Filter Advanced Item Filter Limited Item Filter Big Item Filter Advanced Big Item Filter Existing Item Filter Mod Item Filter Power Item Filter Forestry Species Item Filter Fluid Filters \u00b6 Only Ender Fluid Conduits can accept filters. The other types can be filtered to a specific fluid by right-clicking the conduit with a bucket. Fluid Filter Redstone Filters \u00b6 Redstone Filters change the signal that is being processed. Redstone NOT Filter Redstone OR Filter Redstone AND Filter Redstone NOR Filter Redstone NAND Filter Redstone XOR Filter Redstone XNOR Filter Redstone Toggle Latch Filter Redstone Sensor Filter Redstone Counting Filter Redstone Timer Filter","title":"Filters"},{"location":"Filters/#item-filters","text":"Basic Item Filter Advanced Item Filter Limited Item Filter Big Item Filter Advanced Big Item Filter Existing Item Filter Mod Item Filter Power Item Filter Forestry Species Item Filter","title":"Item Filters"},{"location":"Filters/#fluid-filters","text":"Only Ender Fluid Conduits can accept filters. The other types can be filtered to a specific fluid by right-clicking the conduit with a bucket. Fluid Filter","title":"Fluid Filters"},{"location":"Filters/#redstone-filters","text":"Redstone Filters change the signal that is being processed. Redstone NOT Filter Redstone OR Filter Redstone AND Filter Redstone NOR Filter Redstone NAND Filter Redstone XOR Filter Redstone XNOR Filter Redstone Toggle Latch Filter Redstone Sensor Filter Redstone Counting Filter Redstone Timer Filter","title":"Redstone Filters"},{"location":"Fluid-Conduits/","text":"","title":"Fluid Conduits"},{"location":"Fluid-Tanks/","text":"","title":"Fluid Tanks"},{"location":"Forestry-Species-Item-Filter/","text":"","title":"Forestry Species Item Filter"},{"location":"Frank'N'Zombie/","text":"","title":"Frank'N'Zombie"},{"location":"Glider-Wings/","text":"","title":"Glider Wings"},{"location":"Grains-of-Infinity/","text":"(Picture goes here) Grains of Infinity are created by setting Bedrock on fire and letting it burn out naturally. Provided that the fire burns for long enough, there is a 50% chance of it spawning Grains of Infinity. Sometimes the fire burns out to quickly, so the actual chance is slightly under 50%. Grains of Infinity are not fire proof. They do survive a little longer that most items, but they can be destroyed by fire. If Fire Ticks are disabled, Ender IO will cause fires on Bedrock to burn out after a certain amount of time. Starting fires automatically is easy to do using a vanilla Dispenser and a redstone clock, Observer, or Block Detector. Vanilla Dispensers only use a Flint and Steel if the block in front of them is air or TNT, otherwise they do nothing.","title":"Grains of Infinity"},{"location":"Inhibitor-Obelisk/","text":"","title":"Inhibitor Obelisk"},{"location":"Insulated-Redstone-Conduit/","text":"","title":"Insulated Redstone Conduit"},{"location":"Inventory-Charger/","text":"Inventory Charger \u00b6 Requires: Crystals Simple Inventory Charger \u00b6 Charges neighboring items in your inventory. Basic Inventory Charger \u00b6 Charges all items in your inventory. Inventory Charger \u00b6 Charges all items in your inventory. Vibrant Inventory Charger \u00b6 Charges all items in your inventory.","title":"Inventory Charger"},{"location":"Inventory-Charger/#inventory-charger","text":"Requires: Crystals","title":"Inventory Charger"},{"location":"Inventory-Charger/#simple-inventory-charger","text":"Charges neighboring items in your inventory.","title":"Simple Inventory Charger"},{"location":"Inventory-Charger/#basic-inventory-charger","text":"Charges all items in your inventory.","title":"Basic Inventory Charger"},{"location":"Inventory-Charger/#inventory-charger_1","text":"Charges all items in your inventory.","title":"Inventory Charger"},{"location":"Inventory-Charger/#vibrant-inventory-charger","text":"Charges all items in your inventory.","title":"Vibrant Inventory Charger"},{"location":"Inventory-Panel-Remotes/","text":"","title":"Inventory Panel Remotes"},{"location":"Inventory-Panel/","text":"","title":"Inventory Panel"},{"location":"Inventory-Sensor/","text":"","title":"Inventory Sensor"},{"location":"Inventory-System-Storage/","text":"","title":"Inventory System Storage"},{"location":"Item-Conduit/","text":"","title":"Item Conduit"},{"location":"Killer-Joe/","text":"","title":"Killer Joe"},{"location":"Lights/","text":"","title":"Lights"},{"location":"List-of-Conduits/","text":"Energy Conduits Fluid Conduits Insulated Redstone Conduit Item Conduit","title":"List of Conduits"},{"location":"List-of-Generators/","text":"Combustion Generator Stirling Generator Zombie Generator","title":"List of Generators"},{"location":"List-of-Obelisks/","text":"Attractor Obelisk Aversion Obelisk Experience Obelisk Inhibitor Obelisk Relocator Obelisk Weather Obelisk","title":"List of Obelisks"},{"location":"List-of-Powered-Machines/","text":"Alloy Smelter Buffers Crafter Dimensional Transceiver Farming Station Lights Painting Machine Powered Spawner SAG Mill Slice'N'Splice Soul Binder The Vat Wireless Charger","title":"List of Powered Machines"},{"location":"List-of-Unpowered-Machines/","text":"Buffers Enchanter Killer Joe Lights Reservoir Fluid Tanks Vacuum Chest","title":"List of Unpowered Machines"},{"location":"Loot-Tables/","text":"Ender IO Base \u00b6 Base uses loot tables for its dungeon loot. See here . For changing loot tables, see here . Ender IO Zoo \u00b6 Zoo uses loot tables for its mob drops (implementation in progress). See here .","title":"Loot Tables"},{"location":"Loot-Tables/#ender-io-base","text":"Base uses loot tables for its dungeon loot. See here . For changing loot tables, see here .","title":"Ender IO Base"},{"location":"Loot-Tables/#ender-io-zoo","text":"Zoo uses loot tables for its mob drops (implementation in progress). See here .","title":"Ender IO Zoo"},{"location":"Machine-Chassis/","text":"","title":"Machine Chassis"},{"location":"Mod-Item-Filter/","text":"","title":"Mod Item Filter"},{"location":"Non-Gameplay-Information/","text":"Server administrators, modpack makers, modders and power users may want to change how Ender IO works on a deeper level than players. This page collects information for them. Loot Tables (modpacks, servers) API Capacitors (modders, modpacks) Configuration (modpacks, servers, users) \u00b6 Ender IO uses the normal Forge config system. You can use Forge's ingame configuration GUI in single player or edit the config files manually. Configuration is generally split up by module, but some settings are in 'base' even so the machines they affect are in other modules. Recipes (everyone) \u00b6 Ender IO uses an XML-based recipe system for all its recipes and some recipe-like configuration. All those recipes can be edited. When the game starts, Ender IO reads recipe data from 3 sources: The files bundled up in the jar (can be disabled with a config flag), snippets sent by other mods using the IMC system, all files in the 'recipes/user' folder. Each stage can modify (change or disable) recipes from the previous stage. Farming Tools (modders, modpacks) \u00b6 To enable your tools to be usable in the Farming Station you need to: Hoe: Either subclass ItemHoe or oreDict as toolHoe . Axe: Have a harvest level for axe above 0. Treetap: OreDict as toolTreetap . Shears: Either subclass ItemShears or oreDict as toolShears . The Slice'n'Splice uses the same logic for its axe and shears. API (modders) \u00b6 Ender IO has an extensive API you can use. It includes: Interfaces to bind addon mods tightly to the Ender IO base module ( IEnderIOAddon , IModObject , IModTileEntity ). You only need those if you want to make such a tightly coupled addon mod. A capability for code-based capacitors ( CapabilityCapacitorData etc). You can use those if the NBT-based API (see above) isn't enough for you. Interfaces and classes to add farming logic ( IFarmerJoe etc) and fertilizers ( IFertilizer ) to the Farming Station. Both are Forge-Registry-based, so you register them just like blocks and items. Interfaces to make your own Travel Anchors ( ITravelAccessable etc) or Staff of Travelling ( IItemOfTravel ). Interfaces to make a YETA-compatible wrench ( ITool ), an item to see through facades ( IHideFacades ), or selectively hide conduit types ( IConduitControl ). Interfaces to make your own \"Dark Steel Item\" ( IDarkSteelItem ) that can take \"Dark Steel Upgrades\" ( IDarkSteelUpgrade ). This also includes custom materials ( IEquipmentData ) and rendering on the player model ( IHasPlayerRenderer , IRenderUpgrade ). If you want to add conduits, there's a checklist in the API package on what to do. You will need more than just the API as conduits can be quite complicated.","title":"Non Gameplay Information"},{"location":"Non-Gameplay-Information/#configuration-modpacks-servers-users","text":"Ender IO uses the normal Forge config system. You can use Forge's ingame configuration GUI in single player or edit the config files manually. Configuration is generally split up by module, but some settings are in 'base' even so the machines they affect are in other modules.","title":"Configuration (modpacks, servers, users)"},{"location":"Non-Gameplay-Information/#recipes-everyone","text":"Ender IO uses an XML-based recipe system for all its recipes and some recipe-like configuration. All those recipes can be edited. When the game starts, Ender IO reads recipe data from 3 sources: The files bundled up in the jar (can be disabled with a config flag), snippets sent by other mods using the IMC system, all files in the 'recipes/user' folder. Each stage can modify (change or disable) recipes from the previous stage.","title":"Recipes (everyone)"},{"location":"Non-Gameplay-Information/#farming-tools-modders-modpacks","text":"To enable your tools to be usable in the Farming Station you need to: Hoe: Either subclass ItemHoe or oreDict as toolHoe . Axe: Have a harvest level for axe above 0. Treetap: OreDict as toolTreetap . Shears: Either subclass ItemShears or oreDict as toolShears . The Slice'n'Splice uses the same logic for its axe and shears.","title":"Farming Tools (modders, modpacks)"},{"location":"Non-Gameplay-Information/#api-modders","text":"Ender IO has an extensive API you can use. It includes: Interfaces to bind addon mods tightly to the Ender IO base module ( IEnderIOAddon , IModObject , IModTileEntity ). You only need those if you want to make such a tightly coupled addon mod. A capability for code-based capacitors ( CapabilityCapacitorData etc). You can use those if the NBT-based API (see above) isn't enough for you. Interfaces and classes to add farming logic ( IFarmerJoe etc) and fertilizers ( IFertilizer ) to the Farming Station. Both are Forge-Registry-based, so you register them just like blocks and items. Interfaces to make your own Travel Anchors ( ITravelAccessable etc) or Staff of Travelling ( IItemOfTravel ). Interfaces to make a YETA-compatible wrench ( ITool ), an item to see through facades ( IHideFacades ), or selectively hide conduit types ( IConduitControl ). Interfaces to make your own \"Dark Steel Item\" ( IDarkSteelItem ) that can take \"Dark Steel Upgrades\" ( IDarkSteelUpgrade ). This also includes custom materials ( IEquipmentData ) and rendering on the player model ( IHasPlayerRenderer , IRenderUpgrade ). If you want to add conduits, there's a checklist in the API package on what to do. You will need more than just the API as conduits can be quite complicated.","title":"API (modders)"},{"location":"Nutritious-Stick/","text":"","title":"Nutritious Stick"},{"location":"Painting-Machine/","text":"","title":"Painting Machine"},{"location":"Photovoltaic-Cells/","text":"Photovoltaic Cells generate power from sunlight. They can connect horizontally as a free-form multiblock. The amount of power they generate vary throughout the day, maxing out around noon. They must have a clear line of sight to the sky. There is a config option which determines if Photovoltaic Cells of different tiers can connect. In 1.10 they default to allowing them to connect. In 1.7 and the upcoming 1.11 versions they default to not allowing them to connect to different tiers. Photovoltaic Cell \u00b6 Generates a peak of 10 RF/t. Advanced Photovoltaic Cell \u00b6 Generates a peak of 40 RF/t. Vibrant Photovoltaic Cell \u00b6 Generates a peak of 160 RF/t","title":"Photovoltaic Cells"},{"location":"Photovoltaic-Cells/#photovoltaic-cell","text":"Generates a peak of 10 RF/t.","title":"Photovoltaic Cell"},{"location":"Photovoltaic-Cells/#advanced-photovoltaic-cell","text":"Generates a peak of 40 RF/t.","title":"Advanced Photovoltaic Cell"},{"location":"Photovoltaic-Cells/#vibrant-photovoltaic-cell","text":"Generates a peak of 160 RF/t","title":"Vibrant Photovoltaic Cell"},{"location":"Powders-and-Grains/","text":"","title":"Powders and Grains"},{"location":"Power-Monitors/","text":"Power Monitor \u00b6 The Power Monitor is used to show statistics related to power on an attached Conduit Network. It must be touching an Ender IO Energy Conduit . You can see how much RF is stored in the Conduits, Capacitor Banks , and Machines attached to the Conduit Network. You can also see separate input and output RF/t for the network. In addition, the Power Monitor features a redstone control system useful for controlling generators. When the amount of RF in storage (Capacitor Banks) drops below a certain value, the Power Monitor will emit a redstone signal. When the amount of RF in storage rises above another value, the redstone signal stops. Both of those values are configurable, and the system has to be enabled by clicking the tick box in the top left corner. The Power Monitor consumes 1 RF/t and stores up to 20,000 RF. Graphical Power Monitor \u00b6 The Graphical Power Monitor includes all of the features of the normal Power Monitor, but also has a graph that shows the amount of RF in storage over time. This graph is rendered in the GUI, and on the front of the block.","title":"Power Monitors"},{"location":"Power-Monitors/#power-monitor","text":"The Power Monitor is used to show statistics related to power on an attached Conduit Network. It must be touching an Ender IO Energy Conduit . You can see how much RF is stored in the Conduits, Capacitor Banks , and Machines attached to the Conduit Network. You can also see separate input and output RF/t for the network. In addition, the Power Monitor features a redstone control system useful for controlling generators. When the amount of RF in storage (Capacitor Banks) drops below a certain value, the Power Monitor will emit a redstone signal. When the amount of RF in storage rises above another value, the redstone signal stops. Both of those values are configurable, and the system has to be enabled by clicking the tick box in the top left corner. The Power Monitor consumes 1 RF/t and stores up to 20,000 RF.","title":"Power Monitor"},{"location":"Power-Monitors/#graphical-power-monitor","text":"The Graphical Power Monitor includes all of the features of the normal Power Monitor, but also has a graph that shows the amount of RF in storage over time. This graph is rendered in the GUI, and on the front of the block.","title":"Graphical Power Monitor"},{"location":"Powered-Spawner/","text":"","title":"Powered Spawner"},{"location":"Pressure-Plates/","text":"","title":"Pressure Plates"},{"location":"RF-Gauge/","text":"Displays energy levels of adjacent blocks When placed besides a block that has a supported energy storage, it will display a gauge with that blocks buffer levels on the block. It can do that on all 4 sides.","title":"RF Gauge"},{"location":"Reinforced-Obsidian/","text":"","title":"Reinforced Obsidian"},{"location":"Relocator-Obelisk/","text":"","title":"Relocator Obelisk"},{"location":"Remote-Awareness-Upgrade/","text":"Function upgrade for item conduits Allows Inventory Panels attached to this network to see and extract items from this inventory independent of the conduit mode. (That means, there's no need to set the conduit to \"extract\".) An Awareness Upgrade is not needed on conduits connecting to an Inventory Panel or Inventory System Storage. It is also used to craft the Inventory Panel , Inventory Sensors and Inventory System Storage .","title":"Remote Awareness Upgrade"},{"location":"Reservoir/","text":"Water Reservoir The Reservoir is a multi-block that can be built of any number of blocks in any shape. Each block holds one bucket of water. If there is enough water, an infinite water source will form inside. Then each block of the structure will produce up to one bucket of water per second. The minimal working size is 3 blocks, but 4 blocks is strongly recommended. Right-click with a wrench to enable auto-output for that block.","title":"Reservoir"},{"location":"Rod-of-Return/","text":"","title":"Rod of Return"},{"location":"SAG-Mill/","text":"Crushes items. Used for ore doubling and as a crafting process. Upgrade with capacitors to increase speed and energy storage. Speed is directly related to \u00b5I/t. Capacitor \u00b5I/t Buffer (\u00b5I) Basic 20 100,000 Double-Layer 60 300,000 Octadic 100 500,000 Good Loot Cap (4) 160 800,000 Theoretical Max (5) 260 1,300,000 Grinding Balls \u00b6 The slot on the right side of the GUI is for Grinding Balls. Grinding balls provide bonus outputs and adjust power usage. The Grinding Ball is consumed when it is first used by an appropriate recipe and must be fully used up before it can be replaced. Grinding Ball Main Output Bonus Output Power Use Durability (\u00b5I) Flint 120% 125% 85% 24,000 Dark Steel Ball 135% 200% 70% 125,000 Electrical Steel Ball 120% 165% 80% 40,000 Energetic Alloy Ball 160% 110% 110% 80,000 Vibrant Alloy Ball 175% 135% 135% 80,000 Redstone Alloy Ball 100% 100% 35% 30,000 Conductive Iron Ball 135% 100% 100% 40,000 Pulsating Iron Ball 100% 185% 100% 100,000 Soularium Ball 120% 215% 90% 80,000 End Steel Ball 140% 240% 70% 75,000 Grinding Balls are only used in certain recipes determined by the recipe's bonus type. If the recipe's bonus type is set to none (like Iron Ingot -> Iron Powder) then the Grinding Ball is not used (no increased output chance, no power reduction, and no durability used by the Grinding Ball). Main Output: The recipe output will be produced this many times. Applies to all outputs. For example, using dark steel (Main Output: 150%) will produce 1 set of items with a 50% chance of producing a second set. Bonus Output: The chances of the different outputs of the recipe are multiplied by this. Only applies to outputs with a chance of appearing, maxes out at a 100% chance, and is applied before the Main Output multiplier. Power Use: Adjusts energy cost of the recipe by the specified amount. This indirectly changes the speed of the SAG Mill, and also affects the durability of the Grinding Balls. Durability: Specifies how long a Grinding Ball will last. Measured in \u00b5I used by the SAG Mill. Not visible in the game. Add-on Grinding Balls \u00b6 The following Grinding Balls are added by Ender IO, but are dependent on materials from other mods. Thermal Expansion Main Output Bonus Output Power Use Durability (\u00b5I) Signalum 120% 165% 35% 100,000 Enderium 165% 145% 125% 120,000 Lumium 110% 215% 90% 100,000 Grinding Ball Example \u00b6 The SAG Mill will process 1 Diamond Ore at the cost of 3,600 \u00b5I. It will produce 2 Diamonds, has a 25% chance of producing an auxiliary Diamond, a 15% chance of producing Cobblestone, and a 5% chance of producing Coal Powder. If you use a Dark Steel Ball, then the recipe only needs 70% of the base power, down to 2,520 \u00b5I. If you are using an Octadic Capacitor, then the SAG Mill processes at 100 \u00b5I/t, meaning it takes 25.2 ticks (1.26 seconds) to process the ore rather than the previous 36 ticks (1.80 seconds). The Dark Steel Ball will consume 2,520 points of durability (out of its maximum of 125,000). The Bonus Output increases chance based outputs by 200%, maxing at 100%. The first two Diamonds don't benefit from the Bonus Output as they are already at 100%. The auxiliary Diamond now has a 50% chance of being created. Cobblestone is increased to a 30% chance, and Coal Powder is increased to a 10% chance. The Main Output bonus of 135% is applied to all items. There is a 35% chance of doubling the entire output. The end result will be an average of 2.7 Diamonds per ore from the primary set, and 0.675 Diamonds per ore from the auxiliary Diamond, resulting in an average of 3.375 Diamonds per ore. For reference, Fortune III averages out to 2.20 Diamonds per ore, and a SAG Mill with no Grinding Ball would produce an average of 2.25 Diamonds per ore.","title":"SAG Mill"},{"location":"SAG-Mill/#grinding-balls","text":"The slot on the right side of the GUI is for Grinding Balls. Grinding balls provide bonus outputs and adjust power usage. The Grinding Ball is consumed when it is first used by an appropriate recipe and must be fully used up before it can be replaced. Grinding Ball Main Output Bonus Output Power Use Durability (\u00b5I) Flint 120% 125% 85% 24,000 Dark Steel Ball 135% 200% 70% 125,000 Electrical Steel Ball 120% 165% 80% 40,000 Energetic Alloy Ball 160% 110% 110% 80,000 Vibrant Alloy Ball 175% 135% 135% 80,000 Redstone Alloy Ball 100% 100% 35% 30,000 Conductive Iron Ball 135% 100% 100% 40,000 Pulsating Iron Ball 100% 185% 100% 100,000 Soularium Ball 120% 215% 90% 80,000 End Steel Ball 140% 240% 70% 75,000 Grinding Balls are only used in certain recipes determined by the recipe's bonus type. If the recipe's bonus type is set to none (like Iron Ingot -> Iron Powder) then the Grinding Ball is not used (no increased output chance, no power reduction, and no durability used by the Grinding Ball). Main Output: The recipe output will be produced this many times. Applies to all outputs. For example, using dark steel (Main Output: 150%) will produce 1 set of items with a 50% chance of producing a second set. Bonus Output: The chances of the different outputs of the recipe are multiplied by this. Only applies to outputs with a chance of appearing, maxes out at a 100% chance, and is applied before the Main Output multiplier. Power Use: Adjusts energy cost of the recipe by the specified amount. This indirectly changes the speed of the SAG Mill, and also affects the durability of the Grinding Balls. Durability: Specifies how long a Grinding Ball will last. Measured in \u00b5I used by the SAG Mill. Not visible in the game.","title":"Grinding Balls"},{"location":"SAG-Mill/#add-on-grinding-balls","text":"The following Grinding Balls are added by Ender IO, but are dependent on materials from other mods. Thermal Expansion Main Output Bonus Output Power Use Durability (\u00b5I) Signalum 120% 165% 35% 100,000 Enderium 165% 145% 125% 120,000 Lumium 110% 215% 90% 100,000","title":"Add-on Grinding Balls"},{"location":"SAG-Mill/#grinding-ball-example","text":"The SAG Mill will process 1 Diamond Ore at the cost of 3,600 \u00b5I. It will produce 2 Diamonds, has a 25% chance of producing an auxiliary Diamond, a 15% chance of producing Cobblestone, and a 5% chance of producing Coal Powder. If you use a Dark Steel Ball, then the recipe only needs 70% of the base power, down to 2,520 \u00b5I. If you are using an Octadic Capacitor, then the SAG Mill processes at 100 \u00b5I/t, meaning it takes 25.2 ticks (1.26 seconds) to process the ore rather than the previous 36 ticks (1.80 seconds). The Dark Steel Ball will consume 2,520 points of durability (out of its maximum of 125,000). The Bonus Output increases chance based outputs by 200%, maxing at 100%. The first two Diamonds don't benefit from the Bonus Output as they are already at 100%. The auxiliary Diamond now has a 50% chance of being created. Cobblestone is increased to a 30% chance, and Coal Powder is increased to a 10% chance. The Main Output bonus of 135% is applied to all items. There is a 35% chance of doubling the entire output. The end result will be an average of 2.7 Diamonds per ore from the primary set, and 0.675 Diamonds per ore from the auxiliary Diamond, resulting in an average of 3.375 Diamonds per ore. For reference, Fortune III averages out to 2.20 Diamonds per ore, and a SAG Mill with no Grinding Ball would produce an average of 2.25 Diamonds per ore.","title":"Grinding Ball Example"},{"location":"Self-resetting-Lever/","text":"Switches off after a certain time The self-resetting lever comes in 4 types by default (up to 16 types can be configured in the config file): 10 seconds, 30 seconds, 1 minute and 5 minutes. It will behave and look exactly like a vanilla lever, but it will switch off by itself after the time that's in its name.","title":"Self resetting Lever"},{"location":"Sentient-Ender/","text":"","title":"Sentient Ender"},{"location":"Silicon/","text":"","title":"Silicon"},{"location":"Simple-Machines/","text":"Simple Machines are cheaper versions of Ender IO's starting machines. They are cheaper, but are less capable, slower, hold less energy, don't respond to redstone signals, and most slowly leak excess energy. Tip: A Basic Capacitor Bank doesn't require any alloys to craft, can limit its output, and reacts to a redstone signal. It can be used to mitigate energy loss. Simple Stirling Generator \u00b6 (Image goes here) Simple version of the Stirling Generator . It burns furnace fuels to generate power. It generates 20 \u00b5I/t and produces 10 \u00b5I per unit of burn time (1 Coal produces 16,000 \u00b5I). It holds up to 1,000 \u00b5I, but leaks 1 \u00b5I/t. It is unable to use Lava Buckets. Simple Alloy Smelter \u00b6 (Image goes here) Simple version of the Alloy Smelter . It uses 10 \u00b5I/t when running, stores up to 1,000 \u00b5I, but leaks 1 \u00b5I/t constantly. Unlike the normal Alloy Smelter, it cannot be used as a vanilla furnace. It can only make Alloys. Simple SAG Mill \u00b6 (Image goes here) Simple version of the SAG Mill . It uses 10 \u00b5I/t when running, stores up to 1,000 \u00b5I, but leaks 1 \u00b5I/t constantly. It is unable to use Grinding Balls. Simple Crafter \u00b6 (Image goes here) Simple version of the Crafter . It uses 10 \u00b5I/t when running and stores up to 10,000 \u00b5I. Unlike the other Simple machines, it does not leak power.","title":"Simple Machines"},{"location":"Simple-Machines/#simple-stirling-generator","text":"(Image goes here) Simple version of the Stirling Generator . It burns furnace fuels to generate power. It generates 20 \u00b5I/t and produces 10 \u00b5I per unit of burn time (1 Coal produces 16,000 \u00b5I). It holds up to 1,000 \u00b5I, but leaks 1 \u00b5I/t. It is unable to use Lava Buckets.","title":"Simple Stirling Generator"},{"location":"Simple-Machines/#simple-alloy-smelter","text":"(Image goes here) Simple version of the Alloy Smelter . It uses 10 \u00b5I/t when running, stores up to 1,000 \u00b5I, but leaks 1 \u00b5I/t constantly. Unlike the normal Alloy Smelter, it cannot be used as a vanilla furnace. It can only make Alloys.","title":"Simple Alloy Smelter"},{"location":"Simple-Machines/#simple-sag-mill","text":"(Image goes here) Simple version of the SAG Mill . It uses 10 \u00b5I/t when running, stores up to 1,000 \u00b5I, but leaks 1 \u00b5I/t constantly. It is unable to use Grinding Balls.","title":"Simple SAG Mill"},{"location":"Simple-Machines/#simple-crafter","text":"(Image goes here) Simple version of the Crafter . It uses 10 \u00b5I/t when running and stores up to 10,000 \u00b5I. Unlike the other Simple machines, it does not leak power.","title":"Simple Crafter"},{"location":"Skeletal-Contractor/","text":"","title":"Skeletal Contractor"},{"location":"Slice'N'Splice/","text":"","title":"Slice'N'Splice"},{"location":"Soul-Binder/","text":"","title":"Soul Binder"},{"location":"Soul-Vial/","text":"","title":"Soul Vial"},{"location":"Staff-of-Travelling/","text":"","title":"Staff of Travelling"},{"location":"Stirling-Generator/","text":"Generates energy from furnace fuels. Upgrade with capacitors to increase speed and efficiency. Capacitor \u00b5I/t Buffer (\u00b5I) Burn Rate Efficiency \u00b5I/coal Basic 80 100,000 100% 1.00x 64,000 Double-Layer 100 300,000 133% 1.67x 106,700 Octadic 140 500,000 133% 2.33x 149,380 Good Loot Cap (4) 190 800,000 160% 3.80x 243,200 Theoretical Max (5) 190 1,300,000 200% 4.75x 304,000","title":"Stirling Generator"},{"location":"Telepad/","text":"","title":"Telepad"},{"location":"The-Ender/","text":"","title":"The Ender"},{"location":"The-Vat/","text":"","title":"The Vat"},{"location":"Tormented-Enderman-Head/","text":"","title":"Tormented Enderman Head"},{"location":"Translating-Ender-IO/","text":"Ender IO's lang files are split just like the mod itself is. You will find them in: https://github.com/SleepyTrousers/EnderIO/tree/master/enderio-base/src/main/resources/assets/enderio/lang https://github.com/SleepyTrousers/EnderIO/tree/master/enderio-conduits/src/main/resources/assets/enderio/lang https://github.com/SleepyTrousers/EnderIO/tree/master/enderio-integration-forestry/main/resources/assets/enderio/lang https://github.com/SleepyTrousers/EnderIO/tree/master/enderio-integration-tic/src/main/resources/assets/enderio/lang https://github.com/SleepyTrousers/EnderIO/tree/master/enderio-machines/src/main/resources/assets/enderio/lang All the \"old\" lang files which were made for 1.10.2 or an even older version have been removed. You can find the old files here: https://github.com/SleepyTrousers/EnderIO/tree/1.10/resources/assets/enderio/lang Please note that there are a number of \"guess\" file which are automatically generated. They contain all keys that are needed (although they are in no good order) and try to guess which of the old translations may fit. A word on the state of the en_us files: \"integration-tic\" and \"integration-forestry\" are done. \"base\" and \"machines\" should be quite stable. \"conduits\" may change dramatically. \"invpanel\" hasn't even been started.","title":"Translating Ender IO"},{"location":"Travel-Anchor/","text":"","title":"Travel Anchor"},{"location":"Vacuum-Chest/","text":"","title":"Vacuum Chest"},{"location":"Weather-Obelisk/","text":"","title":"Weather Obelisk"},{"location":"Why-are-my-conduits-red/","text":"Why are my conduits red? \u00b6 Conduits go offline when they are partially in unloaded chunks. Then they are colored red. How do I fix that? \u00b6 Make sure that conduit lines are completely in loaded chunks. You can employ chunk loader along the way or use Dimensional Transceiver s to not have a long line of conduits. Are red conduits bad? \u00b6 No. They are just not working. It is no issue for your conduits to be red when you don't need them.","title":"Why are my conduits red?"},{"location":"Why-are-my-conduits-red/#why-are-my-conduits-red","text":"Conduits go offline when they are partially in unloaded chunks. Then they are colored red.","title":"Why are my conduits red?"},{"location":"Why-are-my-conduits-red/#how-do-i-fix-that","text":"Make sure that conduit lines are completely in loaded chunks. You can employ chunk loader along the way or use Dimensional Transceiver s to not have a long line of conduits.","title":"How do I fix that?"},{"location":"Why-are-my-conduits-red/#are-red-conduits-bad","text":"No. They are just not working. It is no issue for your conduits to be red when you don't need them.","title":"Are red conduits bad?"},{"location":"Wireless-Charger/","text":"","title":"Wireless Charger"},{"location":"XP-Vacuum/","text":"","title":"XP Vacuum"},{"location":"Yeta-Wrench/","text":"","title":"Yeta Wrench"},{"location":"Z-Logic-Controller/","text":"","title":"Z Logic Controller"},{"location":"Zombie-Electrode/","text":"","title":"Zombie Electrode"},{"location":"Zombie-Generator/","text":"Generates power from Nutrient Distillation . Requires at least 1,400mB to generate power. Generates 80 RF/t while consuming Nutrient Distillation at a rate of 10 t/mB.","title":"Zombie Generator"}]}